<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Spv.Usuarios.Api</name>
    </assembly>
    <members>
        <member name="T:Spv.Usuarios.Api.Clients.HeaderPropagationExtensions">
            <summary>
            Extension for Header Propagation Middleware
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.Clients.HeaderPropagationExtensions.AddHeaderPropagation(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Spv.Usuarios.Common.Configurations.HeaderPropagationOptions})">
            <summary>
            Allows Header propagation for set headers in the configuration
            </summary>
            <param name="services"></param>
            <param name="configure"></param>
            <returns></returns>
        </member>
        <member name="M:Spv.Usuarios.Api.Clients.HeaderPropagationExtensions.AddHeaderPropagation(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Action{Spv.Usuarios.Common.Configurations.HeaderPropagationOptions})">
            <summary>
            
            </summary>
            <param name="builder"></param>
            <param name="configure"></param>
            <returns></returns>
        </member>
        <member name="T:Spv.Usuarios.Api.Clients.HttpClientServiceExtension">
            <summary>
            HttpClientService Extension for Service Injection
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.Clients.HttpClientServiceExtension.AddHttpClientConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Main Http Configuration Injection
            </summary>
            <param name="services"></param>
            <param name="config"></param>
        </member>
        <member name="T:Spv.Usuarios.Api.Clients.PollyPolicyBuilder">
            <summary>
            Main Polly Policy Builder
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.Clients.PollyPolicyBuilder.BuildRetryPolicy">
            <summary>
            Retry Policy for general HttpClient usage
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spv.Usuarios.Api.Controllers.ApiControllerBase`1">
            <response code="400">BadRequest. El servidor no puede aceptar la solicitud, el cliente debe revisar los argumentos y valores de headers.</response>
            <response code="500">Internal Server Error. El servidor no puede procesar la solicitud debido a un problema interno.</response>
        </member>
        <member name="P:Spv.Usuarios.Api.Controllers.ApiControllerBase`1.Service">
            <summary>
            Service
            </summary>
        </member>
        <member name="P:Spv.Usuarios.Api.Controllers.ApiControllerBase`1.Logger">
            <summary>
            Logger
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.Controllers.ApiControllerBase`1.#ctor(`0,Microsoft.Extensions.Logging.ILogger{`0})">
            <summary>
            ApiControllerBase
            </summary>
            <param name="service"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Spv.Usuarios.Api.Controllers.ApiControllerBase`1.ExecuteAsync``3(System.Func{Spv.Usuarios.Domain.Services.IRequestBody{``0},System.Threading.Tasks.Task{Spv.Usuarios.Domain.Services.IResponse{``1}}},Spv.Usuarios.Domain.Services.IRequestBody{``0},System.Func{System.Threading.Tasks.Task{Spv.Usuarios.Domain.Services.IResponse{``1}},System.Threading.Tasks.Task{Spv.Usuarios.Domain.Services.IResponse{``2}}})">
            <summary>
            ExecuteAsync
            </summary>
            <param name="serviceOperation"></param>
            <param name="request"></param>
            <param name="mapper"></param>
            <typeparam name="TI"></typeparam>
            <typeparam name="TO"></typeparam>
            <typeparam name="TR"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Spv.Usuarios.Api.Controllers.v1._0.UsuarioController">
            <summary>
            UsuarioController
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.Controllers.v1._0.UsuarioController.#ctor(Spv.Usuarios.Service.Interface.IUsuariosService,Microsoft.Extensions.Logging.ILogger{Spv.Usuarios.Service.Interface.IUsuariosService},Spv.Usuarios.Api.Helpers.IAllowedChannels)">
            <summary>
            UsuarioController
            </summary>
            <param name="usuarioService"></param>
            <param name="logger"></param>
            <param name="allowedChannels"></param>
        </member>
        <member name="M:Spv.Usuarios.Api.Controllers.v1._0.UsuarioController.Autenticacion(Spv.Usuarios.Api.ViewModels.CommonController.Input.ApiHeaders,Spv.Usuarios.Api.ViewModels.UsuarioController.CommonUsuario.Input.AutenticacionModelRequest)">
            <summary>
            autenticacion
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spv.Usuarios.Api.Controllers.v1._0.UsuarioController.Perfil(Spv.Usuarios.Api.ViewModels.CommonController.Input.ApiHeaders,Spv.Usuarios.Api.ViewModels.UsuarioController.CommonUsuario.Input.PerfilModelRequest)">
            <summary>
            Perfil
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spv.Usuarios.Api.Controllers.V2._0.UsuarioController">
            <summary>
            UsuarioController
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.Controllers.V2._0.UsuarioController.#ctor(Spv.Usuarios.Service.Interface.IUsuariosService,Microsoft.Extensions.Logging.ILogger{Spv.Usuarios.Service.Interface.IUsuariosService},Spv.Usuarios.Api.Helpers.IAllowedChannels)">
            <summary>
            UsuarioController
            </summary>
            <param name="usuarioService"></param>
            <param name="logger"></param>
            <param name="allowedChannels"></param>
        </member>
        <member name="M:Spv.Usuarios.Api.Controllers.V2._0.UsuarioController.Registracion(Spv.Usuarios.Api.ViewModels.CommonController.Input.ApiHeaders,Spv.Usuarios.Api.ViewModels.UsuarioController.CommonUsuario.Input.RegistroModelRequest)">
            <summary>
            Registro
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spv.Usuarios.Api.Exceptions.ApiError">
            <summary>
            Error
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.Exceptions.ApiError.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            ApiError
            </summary>
        </member>
        <member name="P:Spv.Usuarios.Api.Exceptions.ApiError.Code">
            <summary>
            codigo
            </summary>
        </member>
        <member name="P:Spv.Usuarios.Api.Exceptions.ApiError.Title">
            <summary>
            Titulo
            </summary>
        </member>
        <member name="P:Spv.Usuarios.Api.Exceptions.ApiError.Source">
            <summary>
            Origen
            </summary>
        </member>
        <member name="P:Spv.Usuarios.Api.Exceptions.ApiError.Detail">
            <summary>
            Detalle
            </summary>
        </member>
        <member name="P:Spv.Usuarios.Api.Exceptions.ApiError.SpvTrackId">
            <summary>
            TrackId
            </summary>
        </member>
        <member name="T:Spv.Usuarios.Api.Exceptions.ErrorDetailModel">
            <summary>
            Detalle de error model
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.Exceptions.ErrorDetailModel.#ctor">
            <summary>
            ErrorDetailModel
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.Exceptions.ErrorDetailModel.#ctor(System.String,System.Int32,System.String,System.String,System.Collections.Generic.List{Spv.Usuarios.Api.Exceptions.ApiError})">
            <summary>
            ErrorDetailModel
            </summary>
        </member>
        <member name="P:Spv.Usuarios.Api.Exceptions.ErrorDetailModel.State">
            <summary>
            Descripción del código de error Http
            </summary>
        </member>
        <member name="P:Spv.Usuarios.Api.Exceptions.ErrorDetailModel.Code">
            <summary>
            codigo HTTP
            </summary>
        </member>
        <member name="P:Spv.Usuarios.Api.Exceptions.ErrorDetailModel.Type">
            <summary>
            Tipo de error, valores posibles: negocio|tecnico
            </summary>
        </member>
        <member name="P:Spv.Usuarios.Api.Exceptions.ErrorDetailModel.Detail">
            <summary>
            Detalle del error
            </summary>
        </member>
        <member name="P:Spv.Usuarios.Api.Exceptions.ErrorDetailModel.Errors">
            <summary>
            Lista de errores
            </summary>
        </member>
        <member name="T:Spv.Usuarios.Api.Exceptions.IInvalidResponseBuilder">
            <summary>
            IInvalidResponseBuilder
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.Exceptions.IInvalidResponseBuilder.Build(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Build
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Spv.Usuarios.Api.Exceptions.InvalidResponseBuilder">
            <summary>
            InvalidResponseBuilder
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.Exceptions.InvalidResponseBuilder.Build(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Build
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Spv.Usuarios.Api.Filters.ExceptionsAttribute">
            <summary>
            ExceptionsAttribute
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.Filters.ExceptionsAttribute.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            OnException
            </summary>
            <param name="context"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Spv.Usuarios.Api.Filters.HeaderPropagationMessageHandlerBuilderFilter">
            <summary>
            HeaderPropagationMessageHandlerBuilderFilter class
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.Filters.HeaderPropagationMessageHandlerBuilderFilter.#ctor(Microsoft.Extensions.Options.IOptions{Spv.Usuarios.Common.Configurations.HeaderPropagationOptions},Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            constructor
            </summary>
            <param name="options"></param>
            <param name="contextAccessor"></param>
        </member>
        <member name="M:Spv.Usuarios.Api.Filters.HeaderPropagationMessageHandlerBuilderFilter.Configure(System.Action{Microsoft.Extensions.Http.HttpMessageHandlerBuilder})">
            <summary>
            Configuration
            </summary>
            <param name="next"></param>
            <returns></returns>
        </member>
        <member name="T:Spv.Usuarios.Api.Filters.ModelStateValidateAttribute">
            <summary>
            ModelStateValidateAttribute
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.Filters.ModelStateValidateAttribute.#ctor(Spv.Usuarios.Api.Exceptions.IInvalidResponseBuilder)">
            <summary>
            ModelStateValidateAttribute
            </summary>
            <param name="invalidResponseBuilder"></param>
        </member>
        <member name="M:Spv.Usuarios.Api.Filters.ModelStateValidateAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            OnActionExecuting
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Spv.Usuarios.Api.Handlers.HeaderPropagationMessageHandler">
            <summary>
            Handler for Header Propagation
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.Handlers.HeaderPropagationMessageHandler.#ctor(Spv.Usuarios.Common.Configurations.HeaderPropagationOptions,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            HeaderPropagationMessageHandler
            </summary>
            <param name="options"></param>
            <param name="contextAccessor"></param>
        </member>
        <member name="M:Spv.Usuarios.Api.Handlers.HeaderPropagationMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Spv.Usuarios.Api.Helpers.AllowedChannels">
            <summary>
            AllowedChannels
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.Helpers.AllowedChannels.#ctor(Microsoft.Extensions.Options.IOptions{Spv.Usuarios.Common.Configurations.ValidChannelsConfigurationOptions},Microsoft.Extensions.Logging.ILogger{Spv.Usuarios.Api.Helpers.AllowedChannels})">
            <summary>
            Constructor
            </summary>
            <param name="validChannelsConfigurationOptions"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Spv.Usuarios.Api.Helpers.AllowedChannels.IsValidChannel(System.String)">
            <summary>
            Método que retorna 'true' si el Header X-Canal es valido
            </summary>
            <param name="pChannel">X-Canal header</param>
            <returns></returns>
        </member>
        <member name="T:Spv.Usuarios.Api.Helpers.IAllowedChannels">
            <summary>
            IAllowedChannels
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.Helpers.IAllowedChannels.IsValidChannel(System.String)">
            <summary>
            Método que retorna 'true' si el Header X-Canal es valido
            </summary>
        </member>
        <member name="T:Spv.Usuarios.Api.Middleware.RequestResponseLoggingMiddleware">
            <summary>
            RequestResponseLoggingMiddleware
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.Middleware.RequestResponseLoggingMiddleware.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            RequestResponseLoggingMiddleware
            </summary>
            <param name="loggerFactory"></param>
        </member>
        <member name="M:Spv.Usuarios.Api.Middleware.RequestResponseLoggingMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            InvokeAsync
            </summary>
            <param name="context"></param>
            <param name="next"></param>
            <returns></returns>
        </member>
        <member name="M:Spv.Usuarios.Api.Middleware.RequestResponseLoggingMiddleware.LogResponse(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            LogResponse
            </summary>
            <param name="context"></param>
            <param name="next"></param>
            <returns></returns>
        </member>
        <member name="M:Spv.Usuarios.Api.Middleware.RequestResponseLoggingMiddleware.ReadStreamInChunks(System.IO.Stream)">
            <summary>
            ReadStreamInChunks
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="T:Spv.Usuarios.Api.Middleware.RequestResponseLoggingMiddlewareExtensions">
            <summary>
            RequestResponseLoggingMiddlewareExtensions
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.Middleware.RequestResponseLoggingMiddlewareExtensions.UseRequestResponseLogging(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            UseRequestResponseLogging
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="T:Spv.Usuarios.Api.Program">
            <summary>
            Program
            </summary>
        </member>
        <member name="P:Spv.Usuarios.Api.Program.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.Program.Main(System.String[])">
            <summary>
            Main
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Spv.Usuarios.Api.Program.CreateHostBuilder(System.String[])">
            <summary>
            CreateHostBuilder
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Spv.Usuarios.Api.Startup">
            <summary>
            Startup
            </summary>
        </member>
        <member name="P:Spv.Usuarios.Api.Startup.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Startup
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:Spv.Usuarios.Api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Spv.Usuarios.Api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="provider"></param>
        </member>
        <member name="T:Spv.Usuarios.Api.Swagger.SwaggerGenSettings">
            <summary>
            SwaggerDefaultValues
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.Swagger.SwaggerGenSettings.AddSwaggerGenForService(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            AddSwaggerGen
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:Spv.Usuarios.Api.Swagger.SwaggerOperationFilter">
            <summary>
            SwaggerOperationFilter
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.Swagger.SwaggerOperationFilter.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            Applies the filter to the specified operation using the given context.
            </summary>
            <param name="operation">The operation to apply the filter to.</param>
            <param name="context">The current operation filter context.</param>
        </member>
        <member name="T:Spv.Usuarios.Api.Swagger.SwaggerUiSettings">
            <summary>
            SwaggerUiSettings Class
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.Swagger.SwaggerUiSettings.SwaggerOptionUi(Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider,Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIOptions)">
            <summary>
            Configuracion de la UI de swagger
            </summary>
            <param name="provider"></param>
            <param name="options"></param>
        </member>
        <member name="T:Spv.Usuarios.Api.ViewModels.CommonController.Input.ApiHeaders">
            <summary>
            Api Headers
            </summary>
        </member>
        <member name="P:Spv.Usuarios.Api.ViewModels.CommonController.Input.ApiHeaders.XCanal">
            <summary>
            Canal desde donde se generó la petición.
            </summary>
        </member>
        <member name="P:Spv.Usuarios.Api.ViewModels.CommonController.Input.ApiHeaders.XUsuario">
            <summary>
            Usuario que generó la petición.
            </summary>
        </member>
        <member name="P:Spv.Usuarios.Api.ViewModels.CommonController.Input.ApiHeaders.XAplicacion">
            <summary>
            Aplicación desde la que se generó la petición.
            </summary>
        </member>
        <member name="P:Spv.Usuarios.Api.ViewModels.CommonController.Input.ApiHeaders.XRequestId">
            <summary>
            Identificador único de petición.
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.ViewModels.CommonController.Input.ApiHeaders.ToRequestBody``1(``0,Spv.Usuarios.Api.Helpers.IAllowedChannels)">
            <summary>
            ToRequestBody
            </summary>
            <typeparam name="T"></typeparam>
            <param name="body"></param>
            <param name="allowedChannels"></param>
            <returns></returns>
        </member>
        <member name="T:Spv.Usuarios.Api.ViewModels.UsuarioController.CommonUsuario.Input.AutenticacionModelRequest">
            <summary>
            Autenticacion Model
            </summary>
        </member>
        <member name="P:Spv.Usuarios.Api.ViewModels.UsuarioController.CommonUsuario.Input.AutenticacionModelRequest.Usuario">
            <summary>
            Usuario
            </summary>
        </member>
        <member name="P:Spv.Usuarios.Api.ViewModels.UsuarioController.CommonUsuario.Input.AutenticacionModelRequest.Clave">
            <summary>
            Clave
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.ViewModels.UsuarioController.CommonUsuario.Input.AutenticacionModelRequest.ToString">
            <summary>
            Retorna la representación en json del objeto con clave ofuscada
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.ViewModels.UsuarioController.CommonUsuario.Input.AutenticacionModelRequest.ToRequestBody(Spv.Usuarios.Api.ViewModels.CommonController.Input.ApiHeaders,Spv.Usuarios.Api.Helpers.IAllowedChannels)">
            <summary>
            ToRequestBody
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spv.Usuarios.Api.ViewModels.UsuarioController.CommonUsuario.Input.PerfilModelRequest">
            <summary>
            Perfil
            </summary>
        </member>
        <member name="P:Spv.Usuarios.Api.ViewModels.UsuarioController.CommonUsuario.Input.PerfilModelRequest.Usuario">
            <summary>
            Nombre usuario
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.ViewModels.UsuarioController.CommonUsuario.Input.PerfilModelRequest.ToRequestBody(Spv.Usuarios.Api.ViewModels.CommonController.Input.ApiHeaders,Spv.Usuarios.Api.Helpers.IAllowedChannels)">
            <summary>
            ToRequestBody
            </summary>
        </member>
        <member name="T:Spv.Usuarios.Api.ViewModels.UsuarioController.CommonUsuario.Input.RegistroModelRequest">
            <summary>
            Registro model
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.ViewModels.UsuarioController.CommonUsuario.Input.RegistroModelRequest.ToRequestBody(Spv.Usuarios.Api.ViewModels.CommonController.Input.ApiHeaders,Spv.Usuarios.Api.Helpers.IAllowedChannels)">
            <summary>
            ToRequestBody
            </summary>
        </member>
        <member name="T:Spv.Usuarios.Api.ViewModels.UsuarioController.CommonUsuario.Output.AutenticacionModelResponse">
            <summary>
            AutenticacionModelResponse
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.ViewModels.UsuarioController.CommonUsuario.Output.AutenticacionModelResponse.#ctor">
            <summary>
            Constructor AutenticacionModelResponse
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.ViewModels.UsuarioController.CommonUsuario.Output.AutenticacionModelResponse.FromAsync(System.Threading.Tasks.Task{Spv.Usuarios.Domain.Services.IResponse{Spv.Usuarios.Common.Dtos.UsuariosService.Output.AutenticacionModelOutput}})">
            <summary>
            FromAsync
            </summary>
            <param name="task"></param>
            <returns></returns>
        </member>
        <member name="T:Spv.Usuarios.Api.ViewModels.UsuarioController.CommonUsuario.Output.PerfilModelResponse">
            <summary>
            PerfilModelResponse
            </summary>
        </member>
        <member name="P:Spv.Usuarios.Api.ViewModels.UsuarioController.CommonUsuario.Output.PerfilModelResponse.LastLogon">
            <summary>
            Fecha último login
            </summary>
        </member>
        <member name="P:Spv.Usuarios.Api.ViewModels.UsuarioController.CommonUsuario.Output.PerfilModelResponse.PersonId">
            <summary>
            id persona
            </summary>
        </member>
        <member name="P:Spv.Usuarios.Api.ViewModels.UsuarioController.CommonUsuario.Output.PerfilModelResponse.UserId">
            <summary>
            id usuario
            </summary>
        </member>
        <member name="P:Spv.Usuarios.Api.ViewModels.UsuarioController.CommonUsuario.Output.PerfilModelResponse.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="P:Spv.Usuarios.Api.ViewModels.UsuarioController.CommonUsuario.Output.PerfilModelResponse.FirstName">
            <summary>
            Nombre 
            </summary>
        </member>
        <member name="P:Spv.Usuarios.Api.ViewModels.UsuarioController.CommonUsuario.Output.PerfilModelResponse.LastName">
            <summary>
            Apellido
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.ViewModels.UsuarioController.CommonUsuario.Output.PerfilModelResponse.FromAsync(System.Threading.Tasks.Task{Spv.Usuarios.Domain.Services.IResponse{Spv.Usuarios.Common.Dtos.UsuariosService.Output.PerfilModelOutput}})">
            <summary>
            FromAsync
            </summary>
            <param name="task"></param>
            <returns></returns>
        </member>
        <member name="T:Spv.Usuarios.Api.ViewModels.UsuarioController.CommonUsuario.Output.RegistroModelResponse">
            <summary>
            RegistroModelResponse
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.ViewModels.UsuarioController.CommonUsuario.Output.RegistroModelResponse.#ctor">
            <summary>
            Constructor RegistroModelResponse
            </summary>
        </member>
        <member name="M:Spv.Usuarios.Api.ViewModels.UsuarioController.CommonUsuario.Output.RegistroModelResponse.FromAsync(System.Threading.Tasks.Task{Spv.Usuarios.Domain.Services.IResponse{Spv.Usuarios.Common.Dtos.UsuariosService.Output.RegistroModelOutput}})">
            <summary>
            FromAsync
            </summary>
            <param name="task"></param>
            <returns></returns>
        </member>
    </members>
</doc>
